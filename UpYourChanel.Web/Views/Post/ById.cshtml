@model UpYourChannel.Web.ViewModels.Post.PostIndexModel
@{
    this.ViewData["Title"] = Model.Post.Title;

    this.ViewData["Title"] = Model.Post.Title;
    async Task DisplayComments(int? parentId)
    {
        var comments = this.Model.Post.Comments.Where(x => x.ParentId == parentId);
        if (!comments.Any())
        {
            return;
        }

        @foreach (var comment in comments)
        {
            var id = "v" + comment.Id;
            <div class="container-fluid mt-100">
                <div class="row">
                    <div class="col-md-12">
                        @*<div class="card mb-4">
                            <div class="card-header">*@
                        <div class="media flex-wrap w-100 ml-4">
                            <img src="https://bootdey.com/img/Content/user_1.jpg" alt="" class="d-block rounded-circle" height="60">
                            <div class="media-body ml-3">
                                <strong class="mt-0 text-success">@Model.Post.UserUserName</strong>
                                <div class="mt-0 text-muted small">@comment.CreatedOn.ToString()</div>

                                @Html.Raw(comment.SanitizedContent)
                                <div class="text-muted ">
                                    <a href="javascript:void(0)" onclick="sendVoteForComment(@comment.Id, true)">
                                        <i class="fa fa-thumbs-up"></i>
                                    </a>
                                    <a id=@id>@comment.VotesCount</a>
                                    <a href="javascript:void(0)" onclick="sendVoteForComment(@comment.Id, false)">
                                        <i class="fa fa-thumbs-down"></i>
                                    </a>
                                    <a href="javascript:void(0)">edit</a>
                                    <a href="javascript:void(0)" onclick="showAddComment(@comment.Id)">reply</a>

                                    <div id="@comment.Id" style="display : none">
                                        <hr />
                                        <form asp-controller="Comment" asp-action="CreateComment" method="post">
                                            <input type="hidden" name="PostId" value="@Model.Post.Id" />
                                            <input type="hidden" name="ParentId" value="@comment.Id" />
                                            <textarea class="someTextBox form-control" name="Content" rows="2" style="width:50%" ; aria-label="With textarea" placeholder="comment..."></textarea>
                                            <div>
                                                <a href="#" onclick="$(this).closest('form').submit()">add comment</a>
                                            </div>
                                        </form>
                                        @*<partial name="_CreateCommentPartial" model="new UpYourChannel.Web.ViewModels.Comment.CommentInputModel
                                            { ParentId = comment.Id, PostId = Model.Post.Id }" />*@
                                    </div>
                                </div>

                            </div>

                            <button type="submit" class="btn btn-primary" onclick="showAddCommentForm(@comment.Id)">Comment &nbsp;<i class="far fa-comment-dots"></i></button>
                        </div>
                        <hr />
                        <div class="card-body">
                            @{ await DisplayComments(comment.Id); }
                        </div>
                    </div>
                </div>
            </div>
        }
    }
}
<head>
    <link href="~/css/comments.css" rel="stylesheet">
    <script src="/lib/tinymce/tinymce.min.js" type="text/javascript"></script>
    <script type="text/javascript">
        tinymce.init({
            selector: "textarea.tinyMce",
            plugins: [
                "image paste table link code media"
            ]
        });
    </script>
</head>
<br />
<br />
<br />
<br />
<h1 class="text-center">@Model.Post.Title</h1>
<br />
<div class="container">
    <!-- maybe container-fluid -->
    <div class="row">
        <div class="col-md-12">
            <div class="card mb-4">
                <div class="card-header">
                    <div class="media flex-wrap w-100 align-items-center">
                        <img src="https://res.cloudinary.com/dxfq3iotg/image/upload/v1574583246/AAA/2.jpg" class="d-block ui-w-40 rounded-circle" alt="">
                        <div class="media-body ml-3">
                            @Model.Post.UserUserName
                            <div class="text-muted small">@Model.Post.CreatedOn</div>
                        </div>
                        <div class="text-muted ml-3">
                            <form id="votesForm" method="post"></form>
                            <div>
                                <a href="javascript:void(0)" onclick="sendVote(@Model.Post.Id, true)">
                                    <i class="fa fa-thumbs-up"></i>
                                </a>
                            </div>
                            <div id="votesCount">@Model.Post.VotesCount</div>
                            <div>
                                <a href="javascript:void(0)" onclick="sendVote(@Model.Post.Id, false)">
                                    <i class="fa fa-thumbs-down"></i>
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    @Html.Raw(Model.Post.SanitizedContent)
                </div>
                <div class="card-footer flex-wrap align-items-center px-0 pt-0 pb-3">
                    <form asp-controller="Post" asp-action="AddCommentToPost" method="post">
                        <div asp-validation-summary="All" class="text-danger"></div>
                        <div class="px-4 pt-3 form-inline">
                            <input type="hidden" name="Comment.PostId" value="@Model.Post.Id">
                            <textarea required asp-for="Comment.Content" rows="2" cols="70" class="form-control" aria-label="With textarea" placeholder="Comment..."></textarea>
                            <div class="px-4 "> <button type="submit" class="btn btn-primary">Comment &nbsp;<i class="far fa-comment-dots"></i></button> </div>
                            <div class="px-4 "> <button class="btn btn-primary">Answer &nbsp;<i class="far fa-comment-dots"></i></button> </div>
                        </div>
                    </form>
                    <br />
                    @{ await DisplayComments(null); }
                </div>
            </div>
        </div>
    </div>
</div>
<br />
<br />
<div class="container">
    @foreach (var comment in Model.Top3Comments)
    {
        <div>
            @comment.Content;
        </div>
        <br />
    }
</div>
<button type="submit" class="btn btn-primary" onclick="showAddComment()">Comment &nbsp;<i class="far fa-comment-dots"></i></button>
<a href="#" onclick="showAddComment()">reply</a>
<div class="container">
    <form asp-controller="Comment" asp-action="CreateComment" method="post" id="AddCommentForm" style="display: none">
        <input type="hidden" name="PostId" value="@Model.Post.Id" />
        <input type="hidden" name="ParentId" value="0" />
        <div>
            <label for="Content"></label>
            <textarea class="tinyMce form-control" name="Content" id="Content"></textarea>
        </div>
        <div>
            <input type="submit" class="btn btn-primary" value="Add answer" />
        </div>
    </form>
</div>
<h1 class="text-center">Top 3 Comments</h1>
<br />
@section Scripts {
    <script>
        function showAddComment(commentId) {
            $('#' + commentId).toggle();
            //$([document.documentElement, document.body]).animate({
            //    scrollTop: $('#' + commentId).offset().top
            //}, 1000);
        }

        function showAddCommentForm(parentId) {
            $("#AddCommentForm input[name='ParentId']").val(parentId);
            $("#AddCommentForm").show();
            $([document.documentElement, document.body]).animate({
                scrollTop: $("#AddCommentForm").offset().top
            }, 1000);
        }

        function sendVote(postId, isUpVote) {
            var token = $("#votesForm input[name=__RequestVerificationToken]").val();
            var json = { postId: postId, isUpVote: isUpVote };
            $.ajax({
                url: "/api/VoteApi/VoteForPost",
                type: "POST",
                data: JSON.stringify(json),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                headers: { 'X-CSRF-TOKEN': token },
                success: function (data) {
                    $("#votesCount").html(data.votesCount);
                }
            });
        }


        function sendVoteForComment(postId, isUpVote) {
            var token = $("#votesForm input[name=__RequestVerificationToken]").val();
            var json = { postId: postId, isUpVote: isUpVote };
            $.ajax({
                url: "/api/VoteApi/VoteForComment",
                type: "POST",
                data: JSON.stringify(json),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                headers: { 'X-CSRF-TOKEN': token },
                success: function (data) {
                    $("#v" + postId).html(data.votesCount);
                }
            });
        }

//      $('#someTextBox').keypress(function (event) {
//          var keycode = (event.keyCode ? event.keyCode : event.which);
//          if (keycode == '13') {
//              alert('You pressed a "enter" key in textbox');
//          }
//      });

//      $(document).ready(function() {

//$('.submit_on_enter').keydown(function(event) {
//  // enter has keyCode = 13, change it if you want to use another button
//  if (event.keyCode == 13) {
//    this.form.submit();
//    return false;
//  }
//});

    </script>
}
